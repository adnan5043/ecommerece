<div class="container">
  <%= form_tag order_payments_path(@order), id: 'payment-form' do %>
    <div class="form-row">
      <label for="card-element" class="m-1">
        Credit or debit card
      </label>
      <div id="card-element" >
        <!-- A Stripe Element will be inserted here. -->
      </div>
      <!-- Used to display form errors. -->
      <div id="card-errors" role="alert"></div>
    </div>
    <!-- Add hidden fields for user name and email -->
    <%= hidden_field_tag 'user_name', current_user.name %>
    <%= hidden_field_tag 'user_email', current_user.email %>

    <button class="paymentbutton " type="submit">Proceed to Payment</button>
<%# <%= link_to 'Payment Records', order_payments_path(@order) %>


  <% end %>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
document.addEventListener('turbolinks:load', function () {
  setupStripe();
});

function setupStripe() {
  var stripe = Stripe('<%= ENV['STRIPE_PUBLISHABLE_KEY'] %>');
  var elements = stripe.elements();
  var form = document.getElementById('payment-form');
  var paymentButton = form.querySelector('.paymentbutton');

  // Create an instance of the card Element.
  var card = elements.create('card');

  // Add an instance of the card Element into the `card-element` div.
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  // Handle form submission.
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    // Disable the button to prevent multiple submissions
    paymentButton.disabled = true;

    // Additional data to be sent to the server
    var additionalData = {
      name: document.getElementById('user_name').value,
      email: document.getElementById('user_email').value
    };

    stripe.createToken(card, additionalData).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error.
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server.
        stripeTokenHandler(result.token);
      }
    });
  });

  // Submit the form with the token ID.
  function stripeTokenHandler(token) {
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Submit the form
    form.submit();
  }
}
</script>


